let fancybox = document.querySelectorAll("[data-fancybox]")

Fancybox.defaults.placeFocusBack = false

let burger = document.querySelector(".burger")
let body = document.querySelector("body")
let header = document.querySelector(".header")
let menuClose = document.querySelector(".menu__close")


if (burger) {
    burger.onclick = function() {
        header.classList.toggle("_open")
        body.classList.toggle("fixed-body")
    }
}

if(menuClose){
    menuClose.onclick = function () {
        closeMenu()
    }
}

function closeMenu(){
    header.classList.remove("_open")
    body.classList.remove("fixed-body")
}



function Sliders() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".slider")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)

        SlidersArray[index] = new Swiper(`.slider[data-slider-id="${index}"] .swiper-container`, {
            slidesPerView: "auto",
            spaceBetween: 0,
            watchSlidesProgress: true,
            preventClicks :true,
            a11y: false,
            observer: true,
            observeParents: true,
            observeSlideChildren: true,
            navigation: {
                nextEl: `.slider[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.slider[data-slider-id="${index}"] .swiper-button-prev`,
            },
            pagination: {
                el: `.slider[data-slider-id="${index}"] .swiper-pagination`,
                type: 'bullets',
                clickable: true,
            },
        })
    })
}

Sliders()

let progressFillItems = document.querySelectorAll("._fill")
progressFillItems.forEach(progressFill => {
    if(progressFill){
        let pathLength = progressFill.getTotalLength();
        progressFill.style.strokeDasharray = pathLength + ' ' + pathLength;
        progressFill.style.strokeDashoffset = pathLength * -1;
    }
})


function setProgressFill(el,progressNum) {
    let pathLength = el.getTotalLength();
    let drawLength = pathLength * (progressNum / 100);
    el.style.strokeDashoffset = drawLength - pathLength


    if(el.classList.contains("_dashed-fill")){
        el.style.strokeDasharray = '10 10';
    }
}

let animatedElements = document.querySelectorAll('.animated');

let Visible = function(target) {
    // Все позиции элемента
    let targetPosition = {
            top: window.pageYOffset + target.getBoundingClientRect().top,
            left: window.pageXOffset + target.getBoundingClientRect().left,
            right: window.pageXOffset + target.getBoundingClientRect().right,
            bottom: window.pageYOffset + target.getBoundingClientRect().bottom
        },
        // Получаем позиции окна
        windowPosition = {
            top: window.pageYOffset,
            left: window.pageXOffset,
            right: window.pageXOffset + document.documentElement.clientWidth,
            bottom: window.pageYOffset + document.documentElement.clientHeight
        };

    if (targetPosition.bottom - 40 > windowPosition.top &&
        targetPosition.top + 40 < windowPosition.bottom) {
        target.classList.add("animated--active")

        if(target.classList.contains("_fill")){
            setTimeout(()=>{
                setProgressFill(target,100)
            },1000)
        }
    } else {

    }
};

// Запускаем функцию при прокрутке страницы
window.addEventListener('scroll', function() {
    // Visible (element);
    initAnimElements()
});
initAnimElements()
    // А также запустим функцию сразу. А то вдруг, элемент изначально видно
    // Visible (element);

function initAnimElements() {
    animatedElements.forEach(el => {
        Visible(el)
    })
}

function animateValue(el) {
    let duration = 1000
    let start = +el.getAttribute("data-start")
    let end = +el.getAttribute("data-end")

    if (start === end) return;
    var range = end - start;
    var current = start;
    var increment = end > start? 1 : -1;
    var stepTime = Math.abs(Math.round(duration / range));
    var obj = el;
    var timer = setInterval(function() {
        if(end > 1000){
            current += increment*10;
        } else{
            current += increment;
        }

        obj.innerHTML = current;
        if (current >= end) {
            clearInterval(timer);
            obj.innerHTML = end
        }
    }, stepTime);
}

// animateValue("value", 100, 25, 5000);

let numberItems = document.querySelectorAll("._number-animation")

numberItems.forEach(item => {
    animateValue(item)
})

//
// var path = document.querySelector('.roofs__img .animate-path');
// var length = path.getTotalLength();
// // Clear any previous transition
// path.style.transition = path.style.WebkitTransition =
//     'none';
// // Set up the starting positions
// path.style.strokeDasharray = length + ' ' + length;
// path.style.strokeDashoffset = length;
// // Trigger a layout so styles are calculated & the browser
// // picks up the starting position before animating
// path.getBoundingClientRect();
// // Define our transition
// path.style.transition = path.style.WebkitTransition =
//     'stroke-dashoffset 2s ease-in-out';
// // Go!
// path.style.strokeDashoffset = '0';

let filterSelects = document.querySelectorAll(".filter-select")
filterSelects.forEach(select => {
    let toggle = select.querySelector(".filter-select__show")
    let current = select.querySelector(".filter-select__current")
    let options = select.querySelectorAll(".filter-select__option input")

    toggle.onclick = function () {
        select.classList.toggle("_open")
    }
    setCurrentValue()

    document.addEventListener( 'click', (e) => {
        const withinBoundaries = e.composedPath().includes(select);

        if ( ! withinBoundaries ) {
            if(select.classList.contains("_open")){
                select.classList.remove("_open")
            }
        }
    })

    options.forEach(option => {
        option.onchange = function () {
            setCurrentValue()
            select.classList.remove("_open")
        }
    })

    function setCurrentValue() {
        let checkedOption = select.querySelector(".filter-select__option input:checked")

        if(!checkedOption){
            current.value = ""
            select.classList.remove("_selected")
            return
        }

        let value = checkedOption.getAttribute("data-value")
        current.value = value
        select.classList.add("_selected")
    }
})

let modalTogglers = document.querySelectorAll("[data-modal]")
let modals = document.querySelectorAll(".modal")

modalTogglers.forEach(el => {
    el.onclick = function () {
        let modalId = el.getAttribute("data-modal")
        openModal(modalId)
    }
})

function closeModals() {
    modals.forEach(modal => {
        modal.classList.remove("_active")
        body.classList.remove("fixed-body2")
    })
}

function openModal(modalId) {
    closeModals()
    let modal = document.querySelector(`#${modalId}`)
    let closeButtons = modal.querySelectorAll(`._close-modal`)

    modal.classList.add("_active")
    body.classList.add("fixed-body2")


    closeButtons.forEach(btn => {
        btn.onclick = ()=> {
            modal.classList.remove("_active")
            body.classList.remove("fixed-body2")
        }
    })
}

var getScrollBarSize = (function() {
    var el = window.document.createElement('textarea'), style = {
        'visibility': 'hidden', 'position': 'absolute', 'zIndex': '-2147483647',
        'top': '-1000px', 'left': '-1000px', 'width': '1000px', 'height': '1000px',
        'overflow': 'scroll', 'margin': '0', 'border': '0', 'padding': '0'
    }, support = el.clientWidth !== undefined && el.offsetWidth !== undefined;

    for (var key in style) {
        if (style.hasOwnProperty(key)) {
            el.style[key] = style[key];
        }
    }

    return function() {
        var size = null;
        if (support && window.document.body) {
            window.document.body.appendChild(el);
            size = [el.offsetWidth - el.clientWidth, el.offsetHeight - el.clientHeight];
            window.document.body.removeChild(el);
        }

        document.documentElement.style.setProperty('--scrollWidth', `${size[0]}px`);
        return size;
    };
})();


window.addEventListener('DOMContentLoaded', () => {
    $('input[type="tel"]').mask('+7 (999) 999-99-99', { autoclear: false }, { placeholder: '+7 (   )    -  -  ' });
    fix100vh();
    window.addEventListener('resize', () => {
        fix100vh();
        getScrollBarSize()
    })

    getScrollBarSize()

})

function fix100vh() {
    let vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
}



//# sourceMappingURL=../sourcemaps/main.min.js.map
